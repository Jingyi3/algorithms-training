建立大根堆
    每次和自己的父节点比较，大了就和父节点交换，直到根节点
    建立新的节点，加入大根堆，并且向上调整
Heapify
    有一个已经在堆里的节点的大小发生变化
    这个节点和左右孩子（2i+1，2i+2）比较找大的然后交换，直到没有孩子

一个堆是在一个数组上伸缩的
建立堆 heapInsert 这个节点逐渐往上跑
当一个节点变小了他就逐渐往下pao

【例1】有一个流一直在往出吐数字，让你求任意时刻往出吐的数字们的中位数。
ans1 收集所有数字，再排序，每次都要O(nlogn)
ans2 堆
    准备两个数组
    第一个数字放第一个数组中--形成大根堆（放入较小的N/2个数字）
    第二个数字放第二个数组中--形成小根堆（放入较大的N/2个数字）
    新的数字比大根堆最大的大 就放在小根堆里；否则放入大根堆
    大根堆数与小根堆数差值超过1，大根堆弹出堆顶进入小根堆，小根堆比大根堆数超过1，小根堆的堆顶弹进大根堆


堆排序
1）一个数组先形成大根堆
2）把堆顶拿出，和最后一个节点交换，heapSize-1 让剩下的进行heapify的调整
